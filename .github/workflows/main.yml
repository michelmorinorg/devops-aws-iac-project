name: Digger Terragrunt Action

on:
  pull_request:
    branches: [ "main" ]
    types: [ closed, opened, synchronize, reopened ]
  issue_comment:
    types: [created]
    if: contains(github.event.comment.body, 'digger')

jobs:
  TerragruntCheck:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4.2.2

      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: 1.6.1
          tg_version: 0.52.4
          tg_dir: .
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'
  tfsec:
    name: tfsec
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v4.2.2
      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
  Digger:
    runs-on: ubuntu-latest
    permissions:    
      contents: write      # required to merge PRs
      id-token: write      # This is required for aws oidc connection
      pull-requests: write # required to post PR comments
      statuses: write      # required to validate combined PR status

    steps:
      - name: digger run
        uses: diggerhq/digger@v0.6.85
        with:
          setup-aws: true
          aws-role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: us-east-1
          setup-terragrunt: true
          terragrunt-version: 0.52.4
          no-backend: true
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEV_ACCOUNT_ID: ${{ secrets.DEV_ACCOUNT_ID }}
          DEV_ROLE: ${{ secrets.DEV_ROLE }}
          STAGING_ACCOUNT_ID: ${{ secrets.STAGING_ACCOUNT_ID }}
          STAGING_ROLE: ${{ secrets.STAGING_ROLE }}
          PRODUCTION_ACCOUNT_ID: ${{ secrets.PRODUCTION_ACCOUNT_ID }}
          PRODUCTION_ROLE: ${{ secrets.PRODUCTION_ROLE }}
